{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\src\\\\components\\\\university\\\\newsletter.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { getTokenClient, getTokenAuth, getFavorites } from '../index/token';\nimport { Grid, Button } from '@material-ui/core';\nimport TitleBar from '../subComponent/TitleBar';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { getUniversityFunction } from './saga';\n\nvar NewsletterUniversityList = /*#__PURE__*/function (_React$Component) {\n  _inherits(NewsletterUniversityList, _React$Component);\n\n  var _super = _createSuper(NewsletterUniversityList);\n\n  function NewsletterUniversityList() {\n    var _this;\n\n    _classCallCheck(this, NewsletterUniversityList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._isMounted = false;\n    _this.state = {\n      allUniversityList: [],\n      favoriteUniversityList: [],\n      searchRows: '',\n      page: 0,\n      rowsPerPage: 12\n    };\n    _this.getListUniversity = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (this.state.universityList) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 3;\n              return getUniversityFunction({});\n\n            case 3:\n              data = _context.sent;\n\n              if (data) {\n                if (!data.error) {\n                  this.setState({\n                    universityList: data.data\n                  });\n                } else {\n                  this._isMounted && this.setState({\n                    errorMessage: data.error\n                  });\n                }\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.getDataFavoriteFromLocalStorage = function () {\n      var dataUser = getFavorites();\n\n      if (dataUser) {\n        _this.setState({\n          favoriteUniversityList: dataUser\n        });\n      }\n    };\n\n    _this.saveData = function (data, fileName) {\n      var a = document.createElement(\"a\");\n      document.body.appendChild(a);\n      a.style = \"display: none\";\n      var json = JSON.stringify(data);\n      var blob = new Blob([json], {\n        type: \"octet/stream\"\n      });\n      var url = window.URL.createObjectURL(blob);\n      a.href = url;\n      a.download = fileName;\n      a.click();\n      window.URL.revokeObjectURL(url);\n    };\n\n    _this.downloadFileJSON = function (dataParam) {\n      var dataJson = dataParam,\n          fileName = \"users.json\";\n\n      _this.saveData(dataJson, fileName);\n    };\n\n    return _this;\n  }\n\n  _createClass(NewsletterUniversityList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n      this._isMounted && this.getListUniversity();\n      this._isMounted && this.getDataFavoriteFromLocalStorage();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (getTokenClient() && getTokenAuth()) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            padding: 0\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(TitleBar, {\n          title: \"Newsletter University - List\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 3,\n          lg: 3,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          startIcon: /*#__PURE__*/React.createElement(ArrowBackIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }\n          }),\n          onClick: function onClick() {\n            return _this2.downloadFileJSON(_this2.state.allUniversityList);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }\n        }, \"Download all university\")), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 3,\n          lg: 3,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          startIcon: /*#__PURE__*/React.createElement(ArrowBackIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }\n          }),\n          onClick: function onClick() {\n            return _this2.downloadFileJSON(_this2.state.favoriteUniversityList);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }\n        }, \"Download my favorite university\"))));\n      } else if (getTokenAuth()) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/login\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 21\n          }\n        });\n      }\n    }\n  }]);\n\n  return NewsletterUniversityList;\n}(React.Component);\n\nexport default NewsletterUniversityList;","map":{"version":3,"sources":["C:/Users/user/Desktop/albertjulian.github.io/src/components/university/newsletter.js"],"names":["React","Redirect","getTokenClient","getTokenAuth","getFavorites","Grid","Button","TitleBar","ArrowBackIcon","getUniversityFunction","NewsletterUniversityList","_isMounted","state","allUniversityList","favoriteUniversityList","searchRows","page","rowsPerPage","getListUniversity","universityList","data","error","setState","errorMessage","getDataFavoriteFromLocalStorage","dataUser","saveData","fileName","a","document","createElement","body","appendChild","style","json","JSON","stringify","blob","Blob","type","url","window","URL","createObjectURL","href","download","click","revokeObjectURL","downloadFileJSON","dataParam","dataJson","padding","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { getTokenClient,getTokenAuth, getFavorites } from '../index/token'\r\nimport {  Grid, Button } from '@material-ui/core';\r\nimport TitleBar from '../subComponent/TitleBar';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { getUniversityFunction } from './saga';\r\n\r\nclass NewsletterUniversityList extends React.Component {\r\n    _isMounted = false\r\n\r\n    state = {\r\n        allUniversityList: [],\r\n        favoriteUniversityList: [],\r\n        searchRows:'',\r\n        page: 0,\r\n        rowsPerPage: 12,\r\n    };\r\n\r\n    componentDidMount(){\r\n        this._isMounted=true;\r\n        this._isMounted && this.getListUniversity()\r\n        this._isMounted && this.getDataFavoriteFromLocalStorage()\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this._isMounted=false\r\n    }\r\n\r\n    getListUniversity = async function(){\r\n        if(!this.state.universityList) {\r\n          const data = await getUniversityFunction({});\r\n    \r\n          if(data){\r\n            if(!data.error){\r\n              this.setState( { universityList: data.data })\r\n            }else{\r\n              this._isMounted && this.setState({errorMessage:data.error})\r\n            }\r\n          }     \r\n        }\r\n      }\r\n\r\n    getDataFavoriteFromLocalStorage = () => {\r\n        const dataUser = getFavorites();\r\n\r\n        if(dataUser) {\r\n            this.setState( { favoriteUniversityList: dataUser} )\r\n        }\r\n    }\r\n\r\n    saveData = (data, fileName) => { \r\n        const a = document.createElement(\"a\"); \r\n        document.body.appendChild(a); \r\n        a.style = \"display: none\"; \r\n        const json = JSON.stringify(data);\r\n        const blob = new Blob([json], {type: \"octet/stream\"});\r\n        const url = window.URL.createObjectURL(blob); \r\n        a.href = url; \r\n        a.download = fileName; \r\n        a.click(); \r\n        window.URL.revokeObjectURL(url); \r\n    };\r\n\r\n    downloadFileJSON = (dataParam) => {\r\n        const dataJson = dataParam, \r\n        fileName = \"users.json\"; \r\n\r\n        this.saveData(dataJson, fileName); \r\n    }\r\n  \r\n    render() {\r\n\r\n        if(getTokenClient() && getTokenAuth()){\r\n            return (\r\n                <div style={{padding:0}}>\r\n                <TitleBar \r\n                    title=\"Newsletter University - List\"\r\n                />\r\n                <Grid container>\r\n                    <Grid item xs={3} lg={3}>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            startIcon={\r\n                                <ArrowBackIcon />\r\n                            }\r\n                            onClick={() => this.downloadFileJSON(this.state.allUniversityList)}\r\n                        >\r\n                            Download all university\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={3} lg={3}>\r\n                        <Button\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            startIcon={\r\n                                <ArrowBackIcon />\r\n                            }\r\n                            onClick={() => this.downloadFileJSON(this.state.favoriteUniversityList)}\r\n                        >\r\n                            Download my favorite university\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                \r\n{/* \r\n                <SearchBar\r\n                    id=\"search\"\r\n                    value={this.state.searchRows}\r\n                    placeholder={'Search University Name'}\r\n                    onChange={this.handleChangeSearch} \r\n                    float={'right'}\r\n                />\r\n\r\n                <Grid container>\r\n                    {\r\n                        this.state.favoriteUniversityList &&\r\n                        this.searchUniversityName(this.state.favoriteUniversityList, this.state.searchRows)\r\n                        .slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage)\r\n                        .map((university, index) => \r\n                            <Grid item xs={12} sm={4} lg={4} key={index} style={{ padding: 10 }}>\r\n                            <CardList\r\n                                data={university}\r\n                            />\r\n                            </Grid>\r\n                        )\r\n                    }\r\n                </Grid>\r\n\r\n                <TablePagination\r\n                    component=\"div\"\r\n                    count={this.searchUniversityName(this.state.favoriteUniversityList, this.state.searchRows).length}\r\n                    rowsPerPage={this.state.rowsPerPage}\r\n                    page={this.state.page}\r\n                    onChangePage={this.handleChangePage}\r\n                    rowsPerPageOptions={[]}\r\n                    labelDisplayedRows={\r\n                        ({ from, to, count }) => `Rows: ${from}-${to} of ${count !== -1 ? count : `more than ${to}`}`\r\n                    }\r\n                />\r\n                */}\r\n                </div> \r\n            );\r\n        }\r\n        else if(getTokenAuth()){\r\n            return  <Redirect to='/login' />\r\n        }\r\n    }\r\n}\r\n\r\nexport default (NewsletterUniversityList) ;"]},"metadata":{},"sourceType":"module"}