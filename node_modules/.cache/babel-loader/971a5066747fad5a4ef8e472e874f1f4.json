{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\src\\\\components\\\\university\\\\universityDetail.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { getUniversityFunction } from './saga';\nimport { getTokenClient, getTokenAuth } from '../index/token';\nimport SearchBar from '../subComponent/SearchBar';\nimport { TablePagination, Grid } from '@material-ui/core';\nimport CardList from '../subComponent/CardList';\nimport TitleBar from '../subComponent/TitleBar';\n\nvar UniversityDetail = /*#__PURE__*/function (_React$Component) {\n  _inherits(UniversityDetail, _React$Component);\n\n  var _super = _createSuper(UniversityDetail);\n\n  function UniversityDetail() {\n    var _this;\n\n    _classCallCheck(this, UniversityDetail);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._isMounted = false;\n    _this.state = {\n      universityList: null,\n      searchRows: '',\n      page: 0,\n      rowsPerPage: 12\n    };\n    _this.getUniversityDetail = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var param, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              param = {\n                domain: this.props.match.params.id\n              };\n\n              if (this.state.universityList) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 4;\n              return getUniversityFunction(param);\n\n            case 4:\n              data = _context.sent;\n\n              if (data) {\n                if (!data.error) {\n                  this.setState({\n                    universityList: data.data\n                  });\n                } else {\n                  this._isMounted && this.setState({\n                    errorMessage: data.error\n                  });\n                }\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.handleChangeSearch = function (e) {\n      _this.setState({\n        searchRows: e.target.value\n      });\n    };\n\n    _this.handleChangePage = function (event, newPage) {\n      _this.setState({\n        page: newPage\n      });\n    };\n\n    _this.searchUniversityName = function (listUniversity, search) {\n      var newList = listUniversity && listUniversity.filter(function (university) {\n        return university.name.toLowerCase().includes(search.toLowerCase());\n      });\n      return newList || [];\n    };\n\n    return _this;\n  }\n\n  _createClass(UniversityDetail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n      this._isMounted && this.getUniversityDetail();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    } //Ambil data\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (getTokenClient() && getTokenAuth()) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            padding: 0\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(TitleBar, {\n          title: \"University - List\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(SearchBar, {\n          id: \"search\",\n          value: this.state.searchRows,\n          placeholder: 'Search University Name',\n          onChange: this.handleChangeSearch,\n          float: 'right',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }\n        }, this.state.universityList && this.searchUniversityName(this.state.universityList, this.state.searchRows).slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage).map(function (university, index) {\n          return /*#__PURE__*/React.createElement(Grid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            lg: 4,\n            key: index,\n            style: {\n              padding: 10\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(CardList, {\n            data: university,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }\n          }));\n        })), /*#__PURE__*/React.createElement(TablePagination, {\n          component: \"div\",\n          count: this.searchUniversityName(this.state.universityList, this.state.searchRows).length,\n          rowsPerPage: this.state.rowsPerPage,\n          page: this.state.page,\n          onChangePage: this.handleChangePage,\n          rowsPerPageOptions: [],\n          labelDisplayedRows: function labelDisplayedRows(_ref2) {\n            var from = _ref2.from,\n                to = _ref2.to,\n                count = _ref2.count;\n            return \"Rows: \".concat(from, \"-\").concat(to, \" of \").concat(count !== -1 ? count : \"more than \".concat(to));\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }\n        }));\n      } else if (getTokenAuth()) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/login\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }\n        });\n      }\n    }\n  }]);\n\n  return UniversityDetail;\n}(React.Component);\n\nvar mapStateToProp = function mapStateToProp(state) {\n  return {\n    id: state.user.id\n  };\n};\n\nexport default connect(mapStateToProp)(UniversityDetail);","map":{"version":3,"sources":["C:/Users/user/Desktop/albertjulian.github.io/src/components/university/universityDetail.js"],"names":["React","connect","Redirect","getUniversityFunction","getTokenClient","getTokenAuth","SearchBar","TablePagination","Grid","CardList","TitleBar","UniversityDetail","_isMounted","state","universityList","searchRows","page","rowsPerPage","getUniversityDetail","param","domain","props","match","params","id","data","error","setState","errorMessage","handleChangeSearch","e","target","value","handleChangePage","event","newPage","searchUniversityName","listUniversity","search","newList","filter","university","name","toLowerCase","includes","padding","slice","map","index","length","from","to","count","Component","mapStateToProp","user"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAuB,aAAvB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAAQC,qBAAR,QAAoC,QAApC;AACA,SAASC,cAAT,EAAwBC,YAAxB,QAA4C,gBAA5C;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,eAAT,EAA0BC,IAA1B,QAAsC,mBAAtC;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,QAAP,MAAqB,0BAArB;;IAEMC,gB;;;;;;;;;;;;;;;UACJC,U,GAAa,K;UAEbC,K,GAAQ;AACNC,MAAAA,cAAc,EAAE,IADV;AAENC,MAAAA,UAAU,EAAC,EAFL;AAGNC,MAAAA,IAAI,EAAE,CAHA;AAINC,MAAAA,WAAW,EAAE;AAJP,K;UAiBRC,mB,yEAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,cAAAA,KADc,GACN;AAAEC,gBAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC;AAAlC,eADM;;AAAA,kBAGhB,KAAKX,KAAL,CAAWC,cAHK;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAICX,qBAAqB,CAACgB,KAAD,CAJtB;;AAAA;AAIZM,cAAAA,IAJY;;AAMlB,kBAAGA,IAAH,EAAQ;AACN,oBAAG,CAACA,IAAI,CAACC,KAAT,EAAe;AACb,uBAAKC,QAAL,CAAe;AAAEb,oBAAAA,cAAc,EAAEW,IAAI,CAACA;AAAvB,mBAAf;AACD,iBAFD,MAEK;AACH,uBAAKb,UAAL,IAAmB,KAAKe,QAAL,CAAc;AAACC,oBAAAA,YAAY,EAACH,IAAI,CAACC;AAAnB,mBAAd,CAAnB;AACD;AACF;;AAZiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UAgBtBG,kB,GAAqB,UAACC,CAAD,EAAK;AACxB,YAAKH,QAAL,CAAc;AAACZ,QAAAA,UAAU,EAAEe,CAAC,CAACC,MAAF,CAASC;AAAtB,OAAd;AACD,K;;UAEDC,gB,GAAmB,UAACC,KAAD,EAAQC,OAAR,EAAoB;AACrC,YAAKR,QAAL,CAAc;AAACX,QAAAA,IAAI,EAAEmB;AAAP,OAAd;AACD,K;;UAEDC,oB,GAAuB,UAACC,cAAD,EAAiBC,MAAjB,EAA4B;AACjD,UAAMC,OAAO,GAAGF,cAAc,IAAIA,cAAc,CAACG,MAAf,CAAsB,UAAUC,UAAV,EAAsB;AAC5E,eAAOA,UAAU,CAACC,IAAX,CAAgBC,WAAhB,GAA8BC,QAA9B,CAAuCN,MAAM,CAACK,WAAP,EAAvC,CAAP;AACD,OAFiC,CAAlC;AAIA,aAAOJ,OAAO,IAAI,EAAlB;AACD,K;;;;;;;wCAxCkB;AACjB,WAAK3B,UAAL,GAAgB,IAAhB;AACA,WAAKA,UAAL,IAAmB,KAAKM,mBAAL,EAAnB;AACD;;;2CAEqB;AACpB,WAAKN,UAAL,GAAgB,KAAhB;AACD,K,CAED;;;;6BAiCS;AAAA;;AACP,UAAGR,cAAc,MAAMC,YAAY,EAAnC,EAAsC;AACpC,4BACE;AAAK,UAAA,KAAK,EAAE;AAACwC,YAAAA,OAAO,EAAC;AAAT,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,QAAD;AACE,UAAA,KAAK,EAAC,mBADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAKE,oBAAC,SAAD;AACE,UAAA,EAAE,EAAC,QADL;AAEE,UAAA,KAAK,EAAE,KAAKhC,KAAL,CAAWE,UAFpB;AAGE,UAAA,WAAW,EAAE,wBAHf;AAIE,UAAA,QAAQ,EAAE,KAAKc,kBAJjB;AAKE,UAAA,KAAK,EAAE,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,eAaE,oBAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEI,KAAKhB,KAAL,CAAWC,cAAX,IACA,KAAKsB,oBAAL,CAA0B,KAAKvB,KAAL,CAAWC,cAArC,EAAqD,KAAKD,KAAL,CAAWE,UAAhE,EACC+B,KADD,CACO,KAAKjC,KAAL,CAAWG,IAAX,GAAkB,KAAKH,KAAL,CAAWI,WADpC,EACiD,KAAKJ,KAAL,CAAWG,IAAX,GAAkB,KAAKH,KAAL,CAAWI,WAA7B,GAA2C,KAAKJ,KAAL,CAAWI,WADvG,EAEC8B,GAFD,CAEK,UAACN,UAAD,EAAaO,KAAb;AAAA,8BACH,oBAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAmB,YAAA,EAAE,EAAE,CAAvB;AAA0B,YAAA,EAAE,EAAE,CAA9B;AAAiC,YAAA,GAAG,EAAEA,KAAtC;AAA6C,YAAA,KAAK,EAAE;AAAEH,cAAAA,OAAO,EAAE;AAAX,aAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE,oBAAC,QAAD;AACE,YAAA,IAAI,EAAEJ,UADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADG;AAAA,SAFL,CAHJ,CAbF,eA4BE,oBAAC,eAAD;AACE,UAAA,SAAS,EAAC,KADZ;AAEE,UAAA,KAAK,EAAE,KAAKL,oBAAL,CAA0B,KAAKvB,KAAL,CAAWC,cAArC,EAAqD,KAAKD,KAAL,CAAWE,UAAhE,EAA4EkC,MAFrF;AAGE,UAAA,WAAW,EAAE,KAAKpC,KAAL,CAAWI,WAH1B;AAIE,UAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWG,IAJnB;AAKE,UAAA,YAAY,EAAE,KAAKiB,gBALrB;AAME,UAAA,kBAAkB,EAAE,EANtB;AAOE,UAAA,kBAAkB,EAChB;AAAA,gBAAGiB,IAAH,SAAGA,IAAH;AAAA,gBAASC,EAAT,SAASA,EAAT;AAAA,gBAAaC,KAAb,SAAaA,KAAb;AAAA,mCAAkCF,IAAlC,cAA0CC,EAA1C,iBAAmDC,KAAK,KAAK,CAAC,CAAX,GAAeA,KAAf,uBAAoCD,EAApC,CAAnD;AAAA,WARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UA5BF,CADF;AA2CD,OA5CD,MA6CK,IAAG9C,YAAY,EAAf,EAAkB;AACrB,4BAAQ,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACD;AACF;;;;EArG4BL,KAAK,CAACqD,S;;AAwGrC,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACzC,KAAD,EAAS;AAC9B,SAAM;AACFW,IAAAA,EAAE,EAAEX,KAAK,CAAC0C,IAAN,CAAW/B;AADb,GAAN;AAGD,CAJD;;AAKA,eAAevB,OAAO,CAAEqD,cAAF,CAAP,CAAyB3C,gBAAzB,CAAf","sourcesContent":["import React from 'react';\nimport {connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport {getUniversityFunction} from './saga'\nimport { getTokenClient,getTokenAuth } from '../index/token'\nimport SearchBar from '../subComponent/SearchBar';\nimport { TablePagination, Grid } from '@material-ui/core';\nimport CardList from '../subComponent/CardList';\nimport TitleBar from '../subComponent/TitleBar';\n\nclass UniversityDetail extends React.Component {\n  _isMounted = false\n\n  state = {\n    universityList: null,\n    searchRows:'',\n    page: 0,\n    rowsPerPage: 12,\n  };\n\n  componentDidMount(){\n    this._isMounted=true\n    this._isMounted && this.getUniversityDetail()\n  }\n\n  componentWillUnmount(){\n    this._isMounted=false\n  }\n  \n  //Ambil data\n  getUniversityDetail = async function(){\n    const param = { domain: this.props.match.params.id }\n\n    if(!this.state.universityList) {\n      const data = await getUniversityFunction(param);\n\n      if(data){\n        if(!data.error){\n          this.setState( { universityList: data.data })\n        }else{\n          this._isMounted && this.setState({errorMessage:data.error})\n        }\n      }     \n    }\n  }\n\n  handleChangeSearch = (e)=>{\n    this.setState({searchRows: e.target.value});\n  }\n  \n  handleChangePage = (event, newPage) => {\n    this.setState({page: newPage});\n  };\n\n  searchUniversityName = (listUniversity, search) => {\n    const newList = listUniversity && listUniversity.filter(function (university) {\n      return university.name.toLowerCase().includes(search.toLowerCase())\n    });\n  \n    return newList || [];\n  }\n  \n  render() {\n    if(getTokenClient() && getTokenAuth()){\n      return (\n        <div style={{padding:0}}>\n          <TitleBar \n            title=\"University - List\"\n          />\n\n          <SearchBar\n            id=\"search\"\n            value={this.state.searchRows}\n            placeholder={'Search University Name'}\n            onChange={this.handleChangeSearch} \n            float={'right'}\n          />\n\n          <Grid container>\n            {\n              this.state.universityList &&\n              this.searchUniversityName(this.state.universityList, this.state.searchRows)\n              .slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage)\n              .map((university, index) => \n                <Grid item xs={12} sm={4} lg={4} key={index} style={{ padding: 10 }}>\n                  <CardList\n                    data={university}\n                  />\n                </Grid>\n              )\n            }\n          </Grid>\n\n          <TablePagination\n            component=\"div\"\n            count={this.searchUniversityName(this.state.universityList, this.state.searchRows).length}\n            rowsPerPage={this.state.rowsPerPage}\n            page={this.state.page}\n            onChangePage={this.handleChangePage}\n            rowsPerPageOptions={[]}\n            labelDisplayedRows={\n              ({ from, to, count }) => `Rows: ${from}-${to} of ${count !== -1 ? count : `more than ${to}`}`\n            }\n          />\n        \n        </div>\n      );\n    }\n    else if(getTokenAuth()){\n      return  <Redirect to='/login' />\n    }\n  }\n}\n\nconst mapStateToProp = (state)=>{\n  return{     \n      id: state.user.id\n  }\n}\nexport default connect (mapStateToProp)(UniversityDetail) ;"]},"metadata":{},"sourceType":"module"}