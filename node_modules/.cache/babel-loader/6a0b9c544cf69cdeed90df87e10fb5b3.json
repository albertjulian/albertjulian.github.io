{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\src\\\\components\\\\subComponent\\\\CardList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, IconButton, Typography, Grid } from '@material-ui/core';\nimport UniversityLogo from './../../icons/university_logo.jpg';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      paddingTop: theme.spacing * 3,\n      paddingBottom: theme.spacing * 3\n    },\n    cardRoot: {\n      height: '100%',\n      cursor: 'pointer',\n      padding: 5\n    },\n    dataCard: {\n      padding: 10\n    },\n    cardContent: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    cardIcon: {\n      backgroundSize: 'contain',\n      backgroundImage: \"url(\".concat(UniversityLogo, \")\"),\n      backgrounRepeat: 'no-repeat',\n      height: 50,\n      width: 50\n    },\n    cardName: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'flex-start'\n    }\n  };\n});\n\nfunction CardList(_ref) {\n  var data = _ref.data;\n  var classes = useStyles();\n  var history = useHistory();\n\n  var _viewCriteriaDetails = function _viewCriteriaDetails(criteriaGroupId) {\n    history.push(\"/criteria/\".concat(criteriaGroupId, \"/details\"));\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    lg: 4,\n    key: data.id,\n    className: classes.dataCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.cardRoot,\n    onClick: function onClick() {\n      return _viewCriteriaDetails(data.id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.cardContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    lg: 3,\n    className: classes.cardName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.cardIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 9,\n    lg: 9,\n    className: classes.cardName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    style: {\n      fontWeight: 600\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, \"\".concat(data.name, \" (\").concat(data.alpha_two_code, \")\")), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, data.country))))));\n}\n\nCardList.propTypes = {\n  data: PropTypes.object.isRequired\n};\nexport default CardList;","map":{"version":3,"sources":["C:/Users/user/Desktop/albertjulian.github.io/src/components/subComponent/CardList.js"],"names":["React","PropTypes","useHistory","makeStyles","Card","CardContent","IconButton","Typography","Grid","UniversityLogo","useStyles","theme","root","paddingTop","spacing","paddingBottom","cardRoot","height","cursor","padding","dataCard","cardContent","display","flexDirection","justifyContent","alignItems","cardIcon","backgroundSize","backgroundImage","backgrounRepeat","width","cardName","CardList","data","classes","history","_viewCriteriaDetails","criteriaGroupId","push","id","fontWeight","name","alpha_two_code","country","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory } from 'react-router';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  IconButton,\r\n  Typography,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport UniversityLogo from './../../icons/university_logo.jpg';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing * 3,\r\n    paddingBottom: theme.spacing * 3,\r\n  },\r\n  cardRoot: {\r\n    height: '100%',\r\n    cursor: 'pointer',\r\n    padding: 5,\r\n  },\r\n  dataCard: {\r\n    padding: 10,\r\n  },\r\n  cardContent: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  cardIcon: {\r\n    backgroundSize: 'contain',\r\n    backgroundImage: `url(${UniversityLogo})`,\r\n    backgrounRepeat: 'no-repeat',\r\n    height: 50,\r\n    width: 50,\r\n  },\r\n  cardName: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-start',\r\n  }\r\n}));\r\n\r\nfunction CardList({ data }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const _viewCriteriaDetails = (criteriaGroupId) => {\r\n    history.push(`/criteria/${criteriaGroupId}/details`);\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12} sm={4} lg={4} key={data.id} className={classes.dataCard}>\r\n        <Card className={classes.cardRoot} onClick={() => _viewCriteriaDetails(data.id)}>\r\n            <CardContent className={classes.cardContent}>\r\n            <Grid container>\r\n                <Grid item xs={12} sm={3} lg={3} className={classes.cardName}>\r\n                    <IconButton className={classes.cardIcon} />\r\n                </Grid>\r\n                <Grid item xs={12} sm={9} lg={9} className={classes.cardName}>\r\n                    <Typography variant=\"h6\" style={{ fontWeight: 600 }}>{`${data.name} (${data.alpha_two_code})`}</Typography>\r\n                    <Typography variant=\"body1\">{data.country}</Typography>\r\n                </Grid>\r\n            </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nCardList.propTypes = {\r\n    data: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CardList;\r\n"]},"metadata":{},"sourceType":"module"}