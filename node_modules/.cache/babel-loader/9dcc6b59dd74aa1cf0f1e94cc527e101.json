{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { keepLogin } from './1.actions';\nimport { serverUrl } from './components/url';\nimport Login from './components/index/login';\nimport ScrollTop from './components/scrollToTop';\nimport axios from 'axios';\nimport { getTokenClient, setTokenAuth, getProfileUser, getTokenAuth } from './components/index/token';\nimport { Grid } from '@material-ui/core';\nimport Drawer from './components/subComponent/Drawer';\nimport CookiesNotification from './components/index/cookiesCard';\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      loading: true\n    };\n\n    _this.getAuth = function () {\n      setTokenAuth('authUniversity');\n\n      _this.setState({\n        loading: false\n      });\n    };\n\n    _this.checkUbahPasswordLink = function (path, token) {\n      var flag = false;\n\n      if (path && token) {\n        if (path.split('/')[1] && path.split('/')[1] === 'ubahpassword' && token.split('token=')[1] && token.split('token=')[1].length !== 0) {\n          flag = true;\n        }\n      }\n\n      return flag;\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getAuth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (!getTokenAuth()) {\n        this.getAuth();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.loading) {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }\n        }, \" loading ....\");\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ScrollTop, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CookiesNotification, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }\n      }), getTokenClient() && getProfileUser() ? /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Drawer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      })) : /*#__PURE__*/React.createElement(Login, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 19\n        }\n      }))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    id: state.user.id\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  keepLogin: keepLogin\n})(App));","map":{"version":3,"sources":["C:/Users/user/Desktop/albertjulian.github.io/src/App.js"],"names":["React","withRouter","connect","keepLogin","serverUrl","Login","ScrollTop","axios","getTokenClient","setTokenAuth","getProfileUser","getTokenAuth","Grid","Drawer","CookiesNotification","App","state","loading","getAuth","setState","checkUbahPasswordLink","path","token","flag","split","length","Component","mapStateToProps","id","user"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,YAAzB,EAAuCC,cAAvC,EAAuDC,YAAvD,QAA0E,0BAA1E;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,OAAOC,mBAAP,MAAgC,gCAAhC;;IAEMC,G;;;;;;;;;;;;;;;UACJC,K,GAAO;AAACC,MAAAA,OAAO,EAAG;AAAX,K;;UAYPC,O,GAAU,YAAI;AACZT,MAAAA,YAAY,CAAC,gBAAD,CAAZ;;AACA,YAAKU,QAAL,CAAc;AAACF,QAAAA,OAAO,EAAE;AAAV,OAAd;AACD,K;;UAEDG,qB,GAAuB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACtC,UAAIC,IAAI,GAAG,KAAX;;AAEA,UAAGF,IAAI,IAAIC,KAAX,EAAkB;AAChB,YACED,IAAI,CAACG,KAAL,CAAW,GAAX,EAAgB,CAAhB,KAAsBH,IAAI,CAACG,KAAL,CAAW,GAAX,EAAgB,CAAhB,MAAuB,cAA7C,IACAF,KAAK,CAACE,KAAN,CAAY,QAAZ,EAAsB,CAAtB,CADA,IAC4BF,KAAK,CAACE,KAAN,CAAY,QAAZ,EAAsB,CAAtB,EAAyBC,MAAzB,KAAoC,CAFlE,EAGE;AACAF,UAAAA,IAAI,GAAG,IAAP;AACD;AACF;;AACD,aAAOA,IAAP;AACD,K;;;;;;;wCA3BkB;AACjB,WAAKL,OAAL;AACD;;;yCAEoB;AACnB,UAAG,CAACP,YAAY,EAAhB,EAAoB;AAClB,aAAKO,OAAL;AACD;AACF;;;6BAsBQ;AAEP,UAAG,KAAKF,KAAL,CAAWC,OAAd,EAAsB;AACpB,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF;AAGD;;AAEC,0BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAIIT,cAAc,MAAME,cAAc,EAAlC,gBACE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,gBAKE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATN,CADF,CADF,CAFF;AAyBH;;;;EAlEeV,KAAK,CAAC0B,S;;AAqExB,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACX,KAAD,EAAS;AAC/B,SAAO;AACHY,IAAAA,EAAE,EAAGZ,KAAK,CAACa,IAAN,CAAWD;AADb,GAAP;AAID,CALD;;AAOA,eAAe3B,UAAU,CAACC,OAAO,CAACyB,eAAD,EAAiB;AAACxB,EAAAA,SAAS,EAATA;AAAD,CAAjB,CAAP,CAAsCY,GAAtC,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport './App.css';\nimport {withRouter} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {keepLogin} from './1.actions'\nimport {serverUrl} from './components/url'\n\nimport Login from './components/index/login'\nimport ScrollTop from './components/scrollToTop'\nimport axios from 'axios'\nimport { getTokenClient, setTokenAuth, getProfileUser, getTokenAuth} from './components/index/token';\nimport { Grid } from '@material-ui/core';\nimport Drawer from './components/subComponent/Drawer';\nimport CookiesNotification from './components/index/cookiesCard';\n\nclass App extends React.Component {\n  state ={loading : true}\n\n  componentDidMount(){\n    this.getAuth()\n  }\n\n  componentDidUpdate() {\n    if(!getTokenAuth()) {\n      this.getAuth()\n    }\n  }\n\n  getAuth = ()=>{\n    setTokenAuth('authUniversity')\n    this.setState({loading: false})\n  }\n\n  checkUbahPasswordLink= (path, token) => {\n    let flag = false;\n\n    if(path && token) {\n      if(\n        path.split('/')[1] && path.split('/')[1] === 'ubahpassword' &&\n        token.split('token=')[1] && token.split('token=')[1].length !== 0\n      ) {\n        flag = true;\n      }\n    }\n    return flag\n  }\n\n\n  render() {\n    \n    if(this.state.loading){\n      return(\n        <p> loading ....</p>\n      )\n    }\n    \n      return (\n      \n        <div>\n          <ScrollTop>\n            <Grid container>\n              <CookiesNotification />\n              \n              {\n                getTokenClient() && getProfileUser() ? \n                  <Grid item xs={12} sm={12}>\n                    <Drawer/>\n                  </Grid>\n                :\n                  <Login />\n              }\n              \n            </Grid>\n          </ScrollTop>\n        </div>\n     \n      );\n    \n  \n     \n \n  }\n}\n  \nconst mapStateToProps = (state)=>{\n  return {\n      id : state.user.id\n\n  }\n}\n\nexport default withRouter(connect(mapStateToProps,{keepLogin}) (App));\n\n\n"]},"metadata":{},"sourceType":"module"}