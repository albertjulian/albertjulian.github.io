{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\src\\\\components\\\\university\\\\universityList.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { getUniversityFunction } from './saga';\nimport { getTokenClient, getTokenAuth, getFavorites, setFavorites } from '../index/token';\nimport SearchBar from '../subComponent/SearchBar';\nimport { TablePagination, Grid } from '@material-ui/core';\nimport CardList from '../subComponent/CardList';\nimport TitleBar from '../subComponent/TitleBar';\n\nvar UniversityList = /*#__PURE__*/function (_React$Component) {\n  _inherits(UniversityList, _React$Component);\n\n  var _super = _createSuper(UniversityList);\n\n  function UniversityList() {\n    var _this;\n\n    _classCallCheck(this, UniversityList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._isMounted = false;\n    _this.state = {\n      universityList: null,\n      favoriteUniversityList: [],\n      profileUser: {},\n      searchRows: '',\n      page: 0,\n      rowsPerPage: 12\n    };\n    _this.getListUniversity = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (this.state.universityList) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 3;\n              return getUniversityFunction({});\n\n            case 3:\n              data = _context.sent;\n\n              if (data) {\n                if (!data.error) {\n                  this.setState({\n                    universityList: data.data\n                  });\n                } else {\n                  this._isMounted && this.setState({\n                    errorMessage: data.error\n                  });\n                }\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.getDataFavoriteFromLocalStorage = function () {\n      var dataUser = getFavorites() || [];\n\n      if (dataUser) {\n        _this.setState({\n          favoriteUniversityList: dataUser\n        });\n      }\n    };\n\n    _this.handleChangeSearch = function (e) {\n      _this.setState({\n        searchRows: e.target.value\n      });\n    };\n\n    _this.handleChangePage = function (event, newPage) {\n      _this.setState({\n        page: newPage\n      });\n    };\n\n    _this.handleFavorite = function (e, name, action) {\n      var newArray = [];\n\n      if (action === 'add') {\n        newArray = _this.state.favoriteUniversityList;\n        newArray.push(name);\n      } else {\n        newArray = _this.state.favoriteUniversityList && _this.state.favoriteUniversityList.filter(function (university) {\n          return university.name !== name;\n        });\n      }\n\n      setFavorites(newArray);\n\n      _this.setState({\n        favoriteUniversityList: newArray\n      });\n    };\n\n    _this.searchUniversityName = function (listUniversity, search) {\n      var newList = listUniversity && listUniversity.filter(function (university) {\n        return university.name.toLowerCase().includes(search.toLowerCase());\n      });\n      return newList || [];\n    };\n\n    return _this;\n  }\n\n  _createClass(UniversityList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n      this._isMounted && this.getListUniversity();\n      this._isMounted && this.getDataFavoriteFromLocalStorage();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    } //Ambil data\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (getTokenClient() && getTokenAuth()) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            padding: 0\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(TitleBar, {\n          title: \"University - List\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(SearchBar, {\n          id: \"search\",\n          value: this.state.searchRows,\n          placeholder: 'Search University Name',\n          onChange: this.handleChangeSearch,\n          float: 'right',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }\n        }, this.state.universityList && this.searchUniversityName(this.state.universityList, this.state.searchRows).slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage).map(function (university, index) {\n          return /*#__PURE__*/React.createElement(Grid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            lg: 4,\n            key: index,\n            style: {\n              padding: 10\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(CardList, {\n            data: university,\n            favorite: _this2.state.favoriteUniversityList,\n            handleFavorite: _this2.handleFavorite,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }\n          }));\n        })), /*#__PURE__*/React.createElement(TablePagination, {\n          component: \"div\",\n          count: this.searchUniversityName(this.state.universityList, this.state.searchRows).length,\n          rowsPerPage: this.state.rowsPerPage,\n          page: this.state.page,\n          onChangePage: this.handleChangePage,\n          rowsPerPageOptions: [],\n          labelDisplayedRows: function labelDisplayedRows(_ref2) {\n            var from = _ref2.from,\n                to = _ref2.to,\n                count = _ref2.count;\n            return \"Rows: \".concat(from, \"-\").concat(to, \" of \").concat(count !== -1 ? count : \"more than \".concat(to));\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 11\n          }\n        }));\n      } else if (getTokenAuth()) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/login\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }\n        });\n      }\n    }\n  }]);\n\n  return UniversityList;\n}(React.Component);\n\nexport default UniversityList;","map":{"version":3,"sources":["C:/Users/user/Desktop/albertjulian.github.io/src/components/university/universityList.js"],"names":["React","Redirect","getUniversityFunction","getTokenClient","getTokenAuth","getFavorites","setFavorites","SearchBar","TablePagination","Grid","CardList","TitleBar","UniversityList","_isMounted","state","universityList","favoriteUniversityList","profileUser","searchRows","page","rowsPerPage","getListUniversity","data","error","setState","errorMessage","getDataFavoriteFromLocalStorage","dataUser","handleChangeSearch","e","target","value","handleChangePage","event","newPage","handleFavorite","name","action","newArray","push","filter","university","searchUniversityName","listUniversity","search","newList","toLowerCase","includes","padding","slice","map","index","length","from","to","count","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router-dom'\nimport {getUniversityFunction} from './saga'\nimport { getTokenClient, getTokenAuth, getFavorites, setFavorites } from '../index/token'\nimport SearchBar from '../subComponent/SearchBar';\nimport { TablePagination, Grid } from '@material-ui/core';\nimport CardList from '../subComponent/CardList';\nimport TitleBar from '../subComponent/TitleBar';\n\nclass UniversityList extends React.Component {\n  _isMounted = false\n\n  state = {\n    universityList: null,\n    favoriteUniversityList: [],\n    profileUser: {},\n    searchRows:'',\n    page: 0,\n    rowsPerPage: 12,\n  };\n\n  componentDidMount(){\n    this._isMounted=true\n    this._isMounted && this.getListUniversity()\n    this._isMounted && this.getDataFavoriteFromLocalStorage()\n  }\n\n  componentWillUnmount(){\n    this._isMounted=false\n  }\n  \n  //Ambil data\n  getListUniversity = async function(){\n    if(!this.state.universityList) {\n      const data = await getUniversityFunction({});\n\n      if(data){\n        if(!data.error){\n          this.setState( { universityList: data.data })\n        }else{\n          this._isMounted && this.setState({errorMessage:data.error})\n        }\n      }     \n    }\n  }\n\n  getDataFavoriteFromLocalStorage = () => {\n    const dataUser = getFavorites() || [];\n\n    if(dataUser) {\n        this.setState( { favoriteUniversityList: dataUser } )\n    }\n  }\n\n  handleChangeSearch = (e)=>{\n    this.setState({searchRows: e.target.value});\n  }\n  \n  handleChangePage = (event, newPage) => {\n    this.setState({page: newPage});\n  };\n\n  handleFavorite = (e, name, action) => {\n    let newArray = [];\n    \n    if (action === 'add') {\n      newArray = this.state.favoriteUniversityList;\n      newArray.push(name);\n    } else {\n      newArray = this.state.favoriteUniversityList && this.state.favoriteUniversityList.filter(function (university) {\n        return university.name !== name\n      });\n    }\n\n    setFavorites(newArray)\n    this.setState({favoriteUniversityList: newArray})\n  }\n\n  searchUniversityName = (listUniversity, search) => {\n    const newList = listUniversity && listUniversity.filter(function (university) {\n      return university.name.toLowerCase().includes(search.toLowerCase())\n    });\n  \n    return newList || [];\n  }\n  \n  render() {\n    if(getTokenClient() && getTokenAuth()){\n      return (\n        <div style={{padding:0}}>\n          <TitleBar \n            title=\"University - List\"\n          />\n\n          <SearchBar\n            id=\"search\"\n            value={this.state.searchRows}\n            placeholder={'Search University Name'}\n            onChange={this.handleChangeSearch} \n            float={'right'}\n          />\n\n          <Grid container>\n            {\n              this.state.universityList &&\n              this.searchUniversityName(this.state.universityList, this.state.searchRows)\n              .slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage)\n              .map((university, index) => \n                <Grid item xs={12} sm={4} lg={4} key={index} style={{ padding: 10 }}>\n                  <CardList\n                    data={university}\n                    favorite={this.state.favoriteUniversityList}\n                    handleFavorite={this.handleFavorite}\n                  />\n                </Grid>\n              )\n            }\n          </Grid>\n\n          <TablePagination\n            component=\"div\"\n            count={this.searchUniversityName(this.state.universityList, this.state.searchRows).length}\n            rowsPerPage={this.state.rowsPerPage}\n            page={this.state.page}\n            onChangePage={this.handleChangePage}\n            rowsPerPageOptions={[]}\n            labelDisplayedRows={\n              ({ from, to, count }) => `Rows: ${from}-${to} of ${count !== -1 ? count : `more than ${to}`}`\n            }\n          />\n        \n        </div>\n      );\n    }\n    else if(getTokenAuth()){\n      return  <Redirect to='/login' />\n    }\n  }\n}\n\nexport default (UniversityList) ;"]},"metadata":{},"sourceType":"module"}