{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\src\\\\components\\\\subComponent\\\\CardList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, IconButton, Typography, Grid } from '@material-ui/core';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport StarIcon from '@material-ui/icons/Star';\nimport UniversityLogo from './../../icons/university_logo.jpg';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      paddingTop: theme.spacing * 3,\n      paddingBottom: theme.spacing * 3\n    },\n    cardRoot: {\n      height: '100%',\n      cursor: 'pointer',\n      padding: 5,\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    cardIcon: {\n      backgroundSize: 'contain',\n      backgroundImage: \"url(\".concat(UniversityLogo, \")\"),\n      backgrounRepeat: 'no-repeat',\n      height: 50,\n      width: 50\n    },\n    cardName: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'flex-start'\n    }\n  };\n});\n\nfunction CardList(_ref) {\n  var data = _ref.data,\n      favorite = _ref.favorite,\n      handleFavorite = _ref.handleFavorite;\n  var classes = useStyles();\n  var history = useHistory();\n\n  var _viewUniversityDetail = function _viewUniversityDetail(universityId) {\n    history.push(\"/university/\".concat(universityId, \"/details\"));\n  };\n\n  var isFavorite = function isFavorite() {\n    return Boolean(favorite.find(function (element) {\n      return element === data.name;\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.cardRoot,\n    onClick: function onClick() {\n      return _viewUniversityDetail(data.domains && data.domains[0] || data.name);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, favorite && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    lg: 12,\n    className: classes.cardName,\n    style: {\n      alignItems: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, isFavorite() ? /*#__PURE__*/React.createElement(IconButton, {\n    color: \"secondary\",\n    \"aria-label\": \"favorite\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(StarIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  })) : /*#__PURE__*/React.createElement(IconButton, {\n    color: \"default\",\n    \"aria-label\": \"not-favorite\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(StarBorderIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 3,\n    lg: 3,\n    className: classes.cardName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.cardIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 9,\n    lg: 9,\n    className: classes.cardName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    style: {\n      fontWeight: 600\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, \"\".concat(data.name, \" (\").concat(data.alpha_two_code, \")\")), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    style: {\n      fontStyle: 'italic',\n      fontWeight: 300\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, data.country)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    lg: 12,\n    className: classes.cardName,\n    style: {\n      alignItems: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, data.web_pages && data.web_pages[0] && /*#__PURE__*/React.createElement(\"a\", {\n    href: data.web_pages[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    style: {\n      fontWeight: 600\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }, data.web_pages[0]))))));\n}\n\nCardList.propTypes = {\n  data: PropTypes.object.isRequired,\n  favorite: PropTypes.array,\n  handleFavorite: PropTypes.func\n};\nexport default CardList;","map":{"version":3,"sources":["C:/Users/user/Desktop/albertjulian.github.io/src/components/subComponent/CardList.js"],"names":["React","PropTypes","useHistory","makeStyles","Card","CardContent","IconButton","Typography","Grid","StarBorderIcon","StarIcon","UniversityLogo","useStyles","theme","root","paddingTop","spacing","paddingBottom","cardRoot","height","cursor","padding","display","flexDirection","justifyContent","alignItems","cardIcon","backgroundSize","backgroundImage","backgrounRepeat","width","cardName","CardList","data","favorite","handleFavorite","classes","history","_viewUniversityDetail","universityId","push","isFavorite","Boolean","find","element","name","domains","fontWeight","alpha_two_code","fontStyle","country","web_pages","propTypes","object","isRequired","array","func"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory } from 'react-router';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  IconButton,\r\n  Typography,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport UniversityLogo from './../../icons/university_logo.jpg';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing * 3,\r\n    paddingBottom: theme.spacing * 3,\r\n  },\r\n  cardRoot: {\r\n    height: '100%',\r\n    cursor: 'pointer',\r\n    padding: 5,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  cardIcon: {\r\n    backgroundSize: 'contain',\r\n    backgroundImage: `url(${UniversityLogo})`,\r\n    backgrounRepeat: 'no-repeat',\r\n    height: 50,\r\n    width: 50,\r\n  },\r\n  cardName: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-start',\r\n  }\r\n}));\r\n\r\nfunction CardList({ data, favorite, handleFavorite }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const _viewUniversityDetail = (universityId) => {\r\n    history.push(`/university/${universityId}/details`);\r\n  };\r\n\r\n  const isFavorite = () => {\r\n    return Boolean(favorite.find((element) => element === data.name));\r\n  }\r\n\r\n  return (\r\n    \r\n    <Card className={classes.cardRoot} onClick={() => _viewUniversityDetail((data.domains && data.domains[0]) || data.name)}>\r\n        <CardContent>\r\n            <Grid container>  \r\n                {\r\n                    favorite &&\r\n                    <Grid item xs={12} sm={12} lg={12} className={classes.cardName} style={{ alignItems: 'flex-end' }}>\r\n                    {\r\n                        isFavorite() ?\r\n                        <IconButton color=\"secondary\" aria-label=\"favorite\" component=\"span\">\r\n                            <StarIcon />\r\n                        </IconButton>\r\n                        :\r\n                        <IconButton color=\"default\" aria-label=\"not-favorite\" component=\"span\">\r\n                            <StarBorderIcon />\r\n                        </IconButton>\r\n                    }\r\n                    </Grid>\r\n                }\r\n                \r\n                <Grid item xs={12} sm={3} lg={3} className={classes.cardName}>\r\n                    <IconButton className={classes.cardIcon} />\r\n                </Grid>\r\n                <Grid item xs={12} sm={9} lg={9} className={classes.cardName}>\r\n                    <Typography variant=\"h6\" style={{ fontWeight: 600 }}>{`${data.name} (${data.alpha_two_code})`}</Typography>\r\n                    <Typography variant=\"body1\" style={{ fontStyle: 'italic', fontWeight: 300 }}>{data.country}</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} lg={12} className={classes.cardName} style={{ alignItems: 'flex-end' }}>\r\n                    {\r\n                        data.web_pages && data.web_pages[0] &&\r\n                        <a href={data.web_pages[0]}>\r\n                            <Typography variant=\"body2\" style={{ fontWeight: 600 }}>{data.web_pages[0]}</Typography>\r\n                        </a>\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n        </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nCardList.propTypes = {\r\n    data: PropTypes.object.isRequired,\r\n    favorite: PropTypes.array,\r\n    handleFavorite: PropTypes.func,\r\n};\r\n\r\nexport default CardList;\r\n"]},"metadata":{},"sourceType":"module"}