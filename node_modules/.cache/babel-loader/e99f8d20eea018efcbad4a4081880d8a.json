{"ast":null,"code":"import SecureLS from 'secure-ls';\nimport md5 from 'md5';\nvar newLs = new SecureLS({\n  encodingType: 'aes',\n  isCompression: true,\n  encryptionSecret: 'react-secret'\n});\nexport function setTokenAuth(token) {\n  newLs.set(md5('tokenAuth'), token);\n}\nexport function setTokenClient(token, expires) {\n  newLs.set(md5('tokenClient'), token);\n  newLs.set(md5('tokenTime'), expires);\n}\nexport function setProfileUser(profileUser) {\n  newLs.set(md5('profileUser'), profileUser);\n}\nexport function setFavorites(favorites) {\n  newLs.set(md5('favorites'), favorites);\n}\nexport function getTokenAuth() {\n  return newLs.get(md5('tokenAuth'));\n}\nexport function getTokenClient() {\n  var newDateToken = new Date().getTime();\n  var timeExpires = newLs.get(md5('tokenTime')) ? parseInt(newLs.get(md5('tokenTime'))) : new Date().getTime();\n\n  if (newDateToken > timeExpires) {\n    localStorage.clear();\n    return null;\n  }\n\n  return newLs.get(md5('tokenClient'));\n}\nexport function getProfileUser() {\n  var newDateToken = new Date().getTime();\n  var timeExpires = newLs.get(md5('tokenTime')) ? parseInt(newLs.get(md5('tokenTime'))) : new Date().getTime();\n\n  if (newDateToken > timeExpires) {\n    localStorage.clear();\n    return null;\n  }\n\n  return newLs.get(md5('profileUser'));\n}\nexport function getFavorites() {\n  var newDateToken = new Date().getTime();\n  var timeExpires = newLs.get(md5('tokenTime')) ? parseInt(newLs.get(md5('tokenTime'))) : new Date().getTime();\n\n  if (newDateToken > timeExpires) {\n    localStorage.clear();\n    return null;\n  }\n\n  return newLs.get(md5('favorites'));\n}","map":{"version":3,"sources":["C:/Users/user/Desktop/albertjulian.github.io/src/components/index/token.js"],"names":["SecureLS","md5","newLs","encodingType","isCompression","encryptionSecret","setTokenAuth","token","set","setTokenClient","expires","setProfileUser","profileUser","setFavorites","favorites","getTokenAuth","get","getTokenClient","newDateToken","Date","getTime","timeExpires","parseInt","localStorage","clear","getProfileUser","getFavorites"],"mappings":"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","sourcesContent":["import SecureLS from 'secure-ls';\nimport md5 from 'md5';\n\nconst newLs = new SecureLS({encodingType: 'aes', isCompression: true, encryptionSecret:'react-secret'}); \n\nexport function setTokenAuth(token) {\n    newLs.set(md5('tokenAuth'), token);\n}\n\nexport function setTokenClient(token, expires) {\n    newLs.set(md5('tokenClient'), token);\n    newLs.set(md5('tokenTime'), expires);\n}\n\nexport function setProfileUser(profileUser) {\n    newLs.set(md5('profileUser'), profileUser);\n}\n\nexport function setFavorites(favorites) {\n    newLs.set(md5('favorites'), favorites);\n}\n\nexport function getTokenAuth() {\n    return newLs.get(md5('tokenAuth'));\n}\n\nexport function getTokenClient() {\n    const newDateToken = new Date().getTime();\n    const timeExpires = newLs.get(md5('tokenTime')) ? parseInt(newLs.get(md5('tokenTime'))) : new Date().getTime();\n    \n    if(newDateToken > timeExpires) {\n        localStorage.clear();\n        return null\n    }\n    \n    return newLs.get(md5('tokenClient'));\n}\n\n\nexport function getProfileUser() {\n    const newDateToken = new Date().getTime();\n    const timeExpires = newLs.get(md5('tokenTime')) ? parseInt(newLs.get(md5('tokenTime'))) : new Date().getTime();\n    \n    if(newDateToken > timeExpires) {\n        localStorage.clear();\n        return null\n    }\n\n    return newLs.get(md5('profileUser'));\n}\n\nexport function getFavorites() {\n    const newDateToken = new Date().getTime();\n    const timeExpires = newLs.get(md5('tokenTime')) ? parseInt(newLs.get(md5('tokenTime'))) : new Date().getTime();\n    \n    if(newDateToken > timeExpires) {\n        localStorage.clear();\n        return null\n    }\n\n    return newLs.get(md5('favorites'));\n}"]},"metadata":{},"sourceType":"module"}