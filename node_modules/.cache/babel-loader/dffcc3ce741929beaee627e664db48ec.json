{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\src\\\\components\\\\university\\\\favoriteUniversity.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { getUniversityFunction } from './saga';\nimport { getTokenClient, getTokenAuth, getProfileUser } from '../index/token';\nimport SearchBar from '../subComponent/SearchBar';\nimport { TablePagination, Grid } from '@material-ui/core';\nimport CardList from '../subComponent/CardList';\nimport TitleBar from '../subComponent/TitleBar';\n\nvar FavoriteUniversityList = /*#__PURE__*/function (_React$Component) {\n  _inherits(FavoriteUniversityList, _React$Component);\n\n  var _super = _createSuper(FavoriteUniversityList);\n\n  function FavoriteUniversityList() {\n    var _this;\n\n    _classCallCheck(this, FavoriteUniversityList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._isMounted = false;\n    _this.state = {\n      favoriteUniversityList: null,\n      allUniversityList: null,\n      searchRows: '',\n      page: 0,\n      rowsPerPage: 12\n    };\n    _this.getListUniversity = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (this.state.favoriteUniversityList) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 3;\n              return getUniversityFunction({});\n\n            case 3:\n              data = _context.sent;\n\n              if (data) {\n                if (!data.error) {\n                  this.setState({\n                    favoriteUniversityList: data.data,\n                    allUniversityList: data.data\n                  });\n                } else {\n                  this._isMounted && this.setState({\n                    errorMessage: data.error\n                  });\n                }\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.getDataFavoriteFromJSON = function () {\n      var dataUser = JSON.parse(getProfileUser());\n      var fileName = 'users';\n    };\n\n    _this.handleChangeSearch = function (e) {\n      _this.setState({\n        searchRows: e.target.value\n      });\n    };\n\n    _this.handleChangePage = function (event, newPage) {\n      _this.setState({\n        page: newPage\n      });\n    };\n\n    _this.searchUniversityName = function (listUniversity, search) {\n      var newList = listUniversity && listUniversity.filter(function (university) {\n        return university.name.toLowerCase().includes(search.toLowerCase());\n      });\n      return newList || [];\n    };\n\n    return _this;\n  }\n\n  _createClass(FavoriteUniversityList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n      this._isMounted && this.getListUniversity();\n      this._isMounted && this.getDataFavoriteFromJSON();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    } //Ambil data\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (getTokenClient() && getTokenAuth()) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            padding: 0\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(TitleBar, {\n          title: \"Favorite University - List\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(SearchBar, {\n          id: \"search\",\n          value: this.state.searchRows,\n          placeholder: 'Search University Name',\n          onChange: this.handleChangeSearch,\n          float: 'right',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }\n        }, this.state.favoriteUniversityList && this.searchUniversityName(this.state.favoriteUniversityList, this.state.searchRows).slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage).map(function (university, index) {\n          return /*#__PURE__*/React.createElement(Grid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            lg: 4,\n            key: index,\n            style: {\n              padding: 10\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(CardList, {\n            data: university,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }\n          }));\n        })), /*#__PURE__*/React.createElement(TablePagination, {\n          component: \"div\",\n          count: this.searchUniversityName(this.state.favoriteUniversityList, this.state.searchRows).length,\n          rowsPerPage: this.state.rowsPerPage,\n          page: this.state.page,\n          onChangePage: this.handleChangePage,\n          rowsPerPageOptions: [],\n          labelDisplayedRows: function labelDisplayedRows(_ref2) {\n            var from = _ref2.from,\n                to = _ref2.to,\n                count = _ref2.count;\n            return \"Rows: \".concat(from, \"-\").concat(to, \" of \").concat(count !== -1 ? count : \"more than \".concat(to));\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }\n        }));\n      } else if (getTokenAuth()) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/login\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }\n        });\n      }\n    }\n  }]);\n\n  return FavoriteUniversityList;\n}(React.Component);\n\nexport default FavoriteUniversityList;","map":{"version":3,"sources":["C:/Users/user/Desktop/albertjulian.github.io/src/components/university/favoriteUniversity.js"],"names":["React","Redirect","getUniversityFunction","getTokenClient","getTokenAuth","getProfileUser","SearchBar","TablePagination","Grid","CardList","TitleBar","FavoriteUniversityList","_isMounted","state","favoriteUniversityList","allUniversityList","searchRows","page","rowsPerPage","getListUniversity","data","error","setState","errorMessage","getDataFavoriteFromJSON","dataUser","JSON","parse","fileName","handleChangeSearch","e","target","value","handleChangePage","event","newPage","searchUniversityName","listUniversity","search","newList","filter","university","name","toLowerCase","includes","padding","slice","map","index","length","from","to","count","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\nimport {getUniversityFunction} from './saga'\r\nimport { getTokenClient,getTokenAuth, getProfileUser } from '../index/token'\r\nimport SearchBar from '../subComponent/SearchBar';\r\nimport { TablePagination, Grid } from '@material-ui/core';\r\nimport CardList from '../subComponent/CardList';\r\nimport TitleBar from '../subComponent/TitleBar';\r\n\r\nclass FavoriteUniversityList extends React.Component {\r\n  _isMounted = false\r\n\r\n  state = {\r\n    favoriteUniversityList: null,\r\n    allUniversityList: null,\r\n    searchRows:'',\r\n    page: 0,\r\n    rowsPerPage: 12,\r\n  };\r\n\r\n  componentDidMount(){\r\n    this._isMounted=true\r\n    this._isMounted && this.getListUniversity()\r\n    this._isMounted && this.getDataFavoriteFromJSON();\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this._isMounted=false\r\n  }\r\n  \r\n  //Ambil data\r\n  getListUniversity = async function(){\r\n    if(!this.state.favoriteUniversityList) {\r\n      const data = await getUniversityFunction({});\r\n\r\n      if(data){\r\n        if(!data.error){\r\n          this.setState( { favoriteUniversityList: data.data, allUniversityList: data.data })\r\n        }else{\r\n          this._isMounted && this.setState({errorMessage:data.error})\r\n        }\r\n      }     \r\n    }\r\n  }\r\n\r\n  getDataFavoriteFromJSON = () => {\r\n      const dataUser = JSON.parse(getProfileUser());\r\n\r\n      const fileName = 'users';\r\n\r\n  }\r\n\r\n  handleChangeSearch = (e)=>{\r\n    this.setState({searchRows: e.target.value});\r\n  }\r\n  \r\n  handleChangePage = (event, newPage) => {\r\n    this.setState({page: newPage});\r\n  };\r\n\r\n  searchUniversityName = (listUniversity, search) => {\r\n    const newList = listUniversity && listUniversity.filter(function (university) {\r\n      return university.name.toLowerCase().includes(search.toLowerCase())\r\n    });\r\n  \r\n    return newList || [];\r\n  }\r\n  \r\n  render() {\r\n    if(getTokenClient() && getTokenAuth()){\r\n      return (\r\n        <div style={{padding:0}}>\r\n          <TitleBar \r\n            title=\"Favorite University - List\"\r\n          />\r\n\r\n          <SearchBar\r\n            id=\"search\"\r\n            value={this.state.searchRows}\r\n            placeholder={'Search University Name'}\r\n            onChange={this.handleChangeSearch} \r\n            float={'right'}\r\n          />\r\n\r\n          <Grid container>\r\n            {\r\n              this.state.favoriteUniversityList &&\r\n              this.searchUniversityName(this.state.favoriteUniversityList, this.state.searchRows)\r\n              .slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage)\r\n              .map((university, index) => \r\n                <Grid item xs={12} sm={4} lg={4} key={index} style={{ padding: 10 }}>\r\n                  <CardList\r\n                    data={university}\r\n                  />\r\n                </Grid>\r\n              )\r\n            }\r\n          </Grid>\r\n\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={this.searchUniversityName(this.state.favoriteUniversityList, this.state.searchRows).length}\r\n            rowsPerPage={this.state.rowsPerPage}\r\n            page={this.state.page}\r\n            onChangePage={this.handleChangePage}\r\n            rowsPerPageOptions={[]}\r\n            labelDisplayedRows={\r\n              ({ from, to, count }) => `Rows: ${from}-${to} of ${count !== -1 ? count : `more than ${to}`}`\r\n            }\r\n          />\r\n        \r\n        </div>\r\n      );\r\n    }\r\n    else if(getTokenAuth()){\r\n      return  <Redirect to='/login' />\r\n    }\r\n  }\r\n}\r\n\r\nexport default (FavoriteUniversityList) ;"]},"metadata":{},"sourceType":"module"}