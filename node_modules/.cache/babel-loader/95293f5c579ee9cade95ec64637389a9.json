{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\src\\\\components\\\\university\\\\favoriteUniversity.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { getTokenClient, getTokenAuth, getFavorites } from '../index/token';\nimport SearchBar from '../subComponent/SearchBar';\nimport { TablePagination, Grid } from '@material-ui/core';\nimport CardList from '../subComponent/CardList';\nimport TitleBar from '../subComponent/TitleBar';\n\nvar FavoriteUniversityList = /*#__PURE__*/function (_React$Component) {\n  _inherits(FavoriteUniversityList, _React$Component);\n\n  var _super = _createSuper(FavoriteUniversityList);\n\n  function FavoriteUniversityList() {\n    var _this;\n\n    _classCallCheck(this, FavoriteUniversityList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._isMounted = false;\n    _this.state = {\n      favoriteUniversityList: [],\n      searchRows: '',\n      page: 0,\n      rowsPerPage: 12\n    };\n\n    _this.getDataFavoriteFromLocalStorage = function () {\n      var dataUser = getFavorites();\n\n      if (dataUser.favorites) {\n        _this.setState({\n          favoriteUniversityList: dataUser\n        });\n      }\n    };\n\n    _this.handleChangeSearch = function (e) {\n      _this.setState({\n        searchRows: e.target.value\n      });\n    };\n\n    _this.handleChangePage = function (event, newPage) {\n      _this.setState({\n        page: newPage\n      });\n    };\n\n    _this.searchUniversityName = function (listUniversity, search) {\n      var newList = listUniversity && listUniversity.filter(function (university) {\n        return university.name.toLowerCase().includes(search.toLowerCase());\n      });\n      return newList || [];\n    };\n\n    _this.handleChangeMultipleSelect = function (event) {\n      _this.setState({\n        favoriteUniversityList: event.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(FavoriteUniversityList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n      this._isMounted && this.getDataFavoriteFromLocalStorage();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (getTokenClient() && getTokenAuth()) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            padding: 0\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(TitleBar, {\n          title: \"Favorite University - List\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(SearchBar, {\n          id: \"search\",\n          value: this.state.searchRows,\n          placeholder: 'Search University Name',\n          onChange: this.handleChangeSearch,\n          float: 'right',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }\n        }, this.state.favoriteUniversityList && this.searchUniversityName(this.state.favoriteUniversityList, this.state.searchRows).slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage).map(function (university, index) {\n          return /*#__PURE__*/React.createElement(Grid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            lg: 4,\n            key: index,\n            style: {\n              padding: 10\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(CardList, {\n            data: university,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }\n          }));\n        })), /*#__PURE__*/React.createElement(TablePagination, {\n          component: \"div\",\n          count: this.searchUniversityName(this.state.favoriteUniversityList, this.state.searchRows).length,\n          rowsPerPage: this.state.rowsPerPage,\n          page: this.state.page,\n          onChangePage: this.handleChangePage,\n          rowsPerPageOptions: [],\n          labelDisplayedRows: function labelDisplayedRows(_ref) {\n            var from = _ref.from,\n                to = _ref.to,\n                count = _ref.count;\n            return \"Rows: \".concat(from, \"-\").concat(to, \" of \").concat(count !== -1 ? count : \"more than \".concat(to));\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }\n        }));\n      } else if (getTokenAuth()) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/login\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 21\n          }\n        });\n      }\n    }\n  }]);\n\n  return FavoriteUniversityList;\n}(React.Component);\n\nexport default FavoriteUniversityList;","map":{"version":3,"sources":["C:/Users/user/Desktop/albertjulian.github.io/src/components/university/favoriteUniversity.js"],"names":["React","Redirect","getTokenClient","getTokenAuth","getFavorites","SearchBar","TablePagination","Grid","CardList","TitleBar","FavoriteUniversityList","_isMounted","state","favoriteUniversityList","searchRows","page","rowsPerPage","getDataFavoriteFromLocalStorage","dataUser","favorites","setState","handleChangeSearch","e","target","value","handleChangePage","event","newPage","searchUniversityName","listUniversity","search","newList","filter","university","name","toLowerCase","includes","handleChangeMultipleSelect","padding","slice","map","index","length","from","to","count","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { getTokenClient,getTokenAuth, getFavorites } from '../index/token'\r\nimport SearchBar from '../subComponent/SearchBar';\r\nimport { TablePagination, Grid } from '@material-ui/core';\r\nimport CardList from '../subComponent/CardList';\r\nimport TitleBar from '../subComponent/TitleBar';\r\n\r\nclass FavoriteUniversityList extends React.Component {\r\n    _isMounted = false\r\n\r\n    state = {\r\n        favoriteUniversityList: [],\r\n        searchRows:'',\r\n        page: 0,\r\n        rowsPerPage: 12,\r\n    };\r\n\r\n    componentDidMount(){\r\n        this._isMounted=true;\r\n        this._isMounted && this.getDataFavoriteFromLocalStorage();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this._isMounted=false\r\n    }\r\n\r\n    getDataFavoriteFromLocalStorage = () => {\r\n        const dataUser = getFavorites();\r\n\r\n        if(dataUser.favorites) {\r\n            this.setState( { favoriteUniversityList: dataUser} )\r\n        }\r\n    }\r\n\r\n    handleChangeSearch = (e)=>{\r\n        this.setState({searchRows: e.target.value});\r\n    }\r\n    \r\n    handleChangePage = (event, newPage) => {\r\n        this.setState({page: newPage});\r\n    };\r\n\r\n    searchUniversityName = (listUniversity, search) => {\r\n        const newList = listUniversity && listUniversity.filter(function (university) {\r\n        return university.name.toLowerCase().includes(search.toLowerCase())\r\n        });\r\n    \r\n        return newList || [];\r\n    }\r\n\r\n    handleChangeMultipleSelect = (event) => {\r\n        this.setState({ favoriteUniversityList: event.target.value });\r\n      };\r\n  \r\n    render() {\r\n\r\n        if(getTokenClient() && getTokenAuth()){\r\n            return (\r\n                <div style={{padding:0}}>\r\n                <TitleBar \r\n                    title=\"Favorite University - List\"\r\n                />\r\n\r\n                <SearchBar\r\n                    id=\"search\"\r\n                    value={this.state.searchRows}\r\n                    placeholder={'Search University Name'}\r\n                    onChange={this.handleChangeSearch} \r\n                    float={'right'}\r\n                />\r\n\r\n                <Grid container>\r\n                    {\r\n                        this.state.favoriteUniversityList &&\r\n                        this.searchUniversityName(this.state.favoriteUniversityList, this.state.searchRows)\r\n                        .slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage)\r\n                        .map((university, index) => \r\n                            <Grid item xs={12} sm={4} lg={4} key={index} style={{ padding: 10 }}>\r\n                            <CardList\r\n                                data={university}\r\n                            />\r\n                            </Grid>\r\n                        )\r\n                    }\r\n                </Grid>\r\n\r\n                <TablePagination\r\n                    component=\"div\"\r\n                    count={this.searchUniversityName(this.state.favoriteUniversityList, this.state.searchRows).length}\r\n                    rowsPerPage={this.state.rowsPerPage}\r\n                    page={this.state.page}\r\n                    onChangePage={this.handleChangePage}\r\n                    rowsPerPageOptions={[]}\r\n                    labelDisplayedRows={\r\n                        ({ from, to, count }) => `Rows: ${from}-${to} of ${count !== -1 ? count : `more than ${to}`}`\r\n                    }\r\n                />\r\n                \r\n                </div>\r\n            );\r\n        }\r\n        else if(getTokenAuth()){\r\n            return  <Redirect to='/login' />\r\n        }\r\n    }\r\n}\r\n\r\nexport default (FavoriteUniversityList) ;"]},"metadata":{},"sourceType":"module"}