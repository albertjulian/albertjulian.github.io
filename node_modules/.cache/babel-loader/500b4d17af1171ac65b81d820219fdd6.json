{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\albertjulian.github.io\\\\src\\\\components\\\\university\\\\newsletter.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { getTokenClient, getTokenAuth, getFavorites } from '../index/token';\nimport SearchBar from '../subComponent/SearchBar';\nimport { TablePagination, Grid, Button } from '@material-ui/core';\nimport CardList from '../subComponent/CardList';\nimport TitleBar from '../subComponent/TitleBar';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nvar NewsletterUniversityList = /*#__PURE__*/function (_React$Component) {\n  _inherits(NewsletterUniversityList, _React$Component);\n\n  var _super = _createSuper(NewsletterUniversityList);\n\n  function NewsletterUniversityList() {\n    var _this;\n\n    _classCallCheck(this, NewsletterUniversityList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._isMounted = false;\n    _this.state = {\n      favoriteUniversityList: [],\n      searchRows: '',\n      page: 0,\n      rowsPerPage: 12\n    };\n\n    _this.getDataFavoriteFromLocalStorage = function () {\n      var dataUser = getFavorites();\n\n      if (dataUser) {\n        _this.setState({\n          favoriteUniversityList: dataUser\n        });\n      }\n    };\n\n    _this.handleChangeSearch = function (e) {\n      _this.setState({\n        searchRows: e.target.value\n      });\n    };\n\n    _this.handleChangePage = function (event, newPage) {\n      _this.setState({\n        page: newPage\n      });\n    };\n\n    _this.searchUniversityName = function (listUniversity, search) {\n      var newList = listUniversity && listUniversity.filter(function (university) {\n        return university.name.toLowerCase().includes(search.toLowerCase());\n      });\n      return newList || [];\n    };\n\n    _this.saveData = function () {\n      console.log('hit');\n      var a = document.createElement(\"a\");\n      document.body.appendChild(a);\n      a.style = \"display: none\";\n      return function (data, fileName) {\n        var json = JSON.stringify(data);\n        var blob = new Blob([json], {\n          type: \"octet/stream\"\n        });\n        var url = window.URL.createObjectURL(blob);\n        a.href = url;\n        a.download = fileName;\n        a.click();\n        window.URL.revokeObjectURL(url);\n      };\n    };\n\n    _this.downloadFileJSON = function () {\n      var data = {\n        x: 42,\n        s: \"hello, world\",\n        d: new Date()\n      },\n          fileName = \"users.json\";\n\n      _this.saveData(data, fileName);\n    };\n\n    return _this;\n  }\n\n  _createClass(NewsletterUniversityList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n      this._isMounted && this.getDataFavoriteFromLocalStorage();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (getTokenClient() && getTokenAuth()) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            padding: 0\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(TitleBar, {\n          title: \"Newsletter University - List\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          variant: \"text\",\n          color: \"primary\",\n          startIcon: /*#__PURE__*/React.createElement(ArrowBackIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 25\n            }\n          }),\n          onClick: function onClick() {\n            return _this2.downloadFileJSON();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }\n        }, \"Download\"));\n      } else if (getTokenAuth()) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/login\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 21\n          }\n        });\n      }\n    }\n  }]);\n\n  return NewsletterUniversityList;\n}(React.Component);\n\nexport default NewsletterUniversityList;","map":{"version":3,"sources":["C:/Users/user/Desktop/albertjulian.github.io/src/components/university/newsletter.js"],"names":["React","Redirect","getTokenClient","getTokenAuth","getFavorites","SearchBar","TablePagination","Grid","Button","CardList","TitleBar","ArrowBackIcon","NewsletterUniversityList","_isMounted","state","favoriteUniversityList","searchRows","page","rowsPerPage","getDataFavoriteFromLocalStorage","dataUser","setState","handleChangeSearch","e","target","value","handleChangePage","event","newPage","searchUniversityName","listUniversity","search","newList","filter","university","name","toLowerCase","includes","saveData","console","log","a","document","createElement","body","appendChild","style","data","fileName","json","JSON","stringify","blob","Blob","type","url","window","URL","createObjectURL","href","download","click","revokeObjectURL","downloadFileJSON","x","s","d","Date","padding","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom'\r\nimport { getTokenClient,getTokenAuth, getFavorites } from '../index/token'\r\nimport SearchBar from '../subComponent/SearchBar';\r\nimport { TablePagination, Grid, Button } from '@material-ui/core';\r\nimport CardList from '../subComponent/CardList';\r\nimport TitleBar from '../subComponent/TitleBar';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nclass NewsletterUniversityList extends React.Component {\r\n    _isMounted = false\r\n\r\n    state = {\r\n        favoriteUniversityList: [],\r\n        searchRows:'',\r\n        page: 0,\r\n        rowsPerPage: 12,\r\n    };\r\n\r\n    componentDidMount(){\r\n        this._isMounted=true;\r\n        this._isMounted && this.getDataFavoriteFromLocalStorage();\r\n\r\n        \r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this._isMounted=false\r\n    }\r\n\r\n    getDataFavoriteFromLocalStorage = () => {\r\n        const dataUser = getFavorites();\r\n\r\n        if(dataUser) {\r\n            this.setState( { favoriteUniversityList: dataUser} )\r\n        }\r\n    }\r\n\r\n    handleChangeSearch = (e)=>{\r\n        this.setState({searchRows: e.target.value});\r\n    }\r\n    \r\n    handleChangePage = (event, newPage) => {\r\n        this.setState({page: newPage});\r\n    };\r\n\r\n    searchUniversityName = (listUniversity, search) => {\r\n        const newList = listUniversity && listUniversity.filter(function (university) {\r\n        return university.name.toLowerCase().includes(search.toLowerCase())\r\n        });\r\n    \r\n        return newList || [];\r\n    }\r\n\r\n    saveData = () => { \r\n        console.log('hit')\r\n        const a = document.createElement(\"a\"); \r\n        document.body.appendChild(a); \r\n        a.style = \"display: none\"; \r\n        return function (data, fileName) { \r\n            const json = JSON.stringify(data);\r\n            const blob = new Blob([json], {type: \"octet/stream\"});\r\n            const url = window.URL.createObjectURL(blob); \r\n            a.href = url; \r\n            a.download = fileName; \r\n            a.click(); \r\n            window.URL.revokeObjectURL(url); \r\n        }; \r\n    }; \r\n     \r\n    \r\n     \r\n    \r\n\r\n    downloadFileJSON = () => {\r\n\r\n        const data = { x: 42, s: \"hello, world\", d: new Date() }, \r\n        fileName = \"users.json\"; \r\n\r\n        this.saveData(data, fileName); \r\n    }\r\n  \r\n    render() {\r\n\r\n        if(getTokenClient() && getTokenAuth()){\r\n            return (\r\n                <div style={{padding:0}}>\r\n                <TitleBar \r\n                    title=\"Newsletter University - List\"\r\n                />\r\n                <Button\r\n                    variant=\"text\"\r\n                    color=\"primary\"\r\n                    startIcon={\r\n                        <ArrowBackIcon />\r\n                    }\r\n                    onClick={() => this.downloadFileJSON()}\r\n                >\r\n                    Download\r\n                </Button>\r\n{/* \r\n                <SearchBar\r\n                    id=\"search\"\r\n                    value={this.state.searchRows}\r\n                    placeholder={'Search University Name'}\r\n                    onChange={this.handleChangeSearch} \r\n                    float={'right'}\r\n                />\r\n\r\n                <Grid container>\r\n                    {\r\n                        this.state.favoriteUniversityList &&\r\n                        this.searchUniversityName(this.state.favoriteUniversityList, this.state.searchRows)\r\n                        .slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage)\r\n                        .map((university, index) => \r\n                            <Grid item xs={12} sm={4} lg={4} key={index} style={{ padding: 10 }}>\r\n                            <CardList\r\n                                data={university}\r\n                            />\r\n                            </Grid>\r\n                        )\r\n                    }\r\n                </Grid>\r\n\r\n                <TablePagination\r\n                    component=\"div\"\r\n                    count={this.searchUniversityName(this.state.favoriteUniversityList, this.state.searchRows).length}\r\n                    rowsPerPage={this.state.rowsPerPage}\r\n                    page={this.state.page}\r\n                    onChangePage={this.handleChangePage}\r\n                    rowsPerPageOptions={[]}\r\n                    labelDisplayedRows={\r\n                        ({ from, to, count }) => `Rows: ${from}-${to} of ${count !== -1 ? count : `more than ${to}`}`\r\n                    }\r\n                />\r\n                */}\r\n                </div> \r\n            );\r\n        }\r\n        else if(getTokenAuth()){\r\n            return  <Redirect to='/login' />\r\n        }\r\n    }\r\n}\r\n\r\nexport default (NewsletterUniversityList) ;"]},"metadata":{},"sourceType":"module"}