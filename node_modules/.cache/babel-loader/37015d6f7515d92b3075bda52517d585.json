{"ast":null,"code":"import Axios from 'axios';\nimport { serverUrl } from './../components/url';\nimport { getTokenClient } from '../components/index/token';\nexport var keepLogin = function keepLogin() {\n  return function (dispatch) {\n    var config = {\n      headers: {\n        'Authorization': \"Bearer \" + getTokenClient()\n      }\n    };\n    Axios.get(serverUrl + \"lender/profile\", config).then(function (res) {\n      if (res.data !== \"undefined\") {\n        dispatch({\n          type: 'LOGIN_SUCCESS',\n          payload: res.data\n        });\n      }\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n};\nexport var resetUser = function resetUser() {\n  return {\n    type: 'RESET_USER'\n  };\n};","map":{"version":3,"sources":["C:/Users/user/Desktop/albertjulian.github.io/src/1.actions/userActions.js"],"names":["Axios","serverUrl","getTokenClient","keepLogin","dispatch","config","headers","get","then","res","data","type","payload","catch","err","console","log","resetUser"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,qBAAxB;AACA,SAASC,cAAT,QAA+B,2BAA/B;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAI;AAC3B,SAAO,UAACC,QAAD,EAAY;AACb,QAAIC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AAAC,yBAAiB,YAAYJ,cAAc;AAA5C;AADE,KAAb;AAGFF,IAAAA,KAAK,CAACO,GAAN,CAAUN,SAAS,GAAC,gBAApB,EAAqCI,MAArC,EACCG,IADD,CACM,UAACC,GAAD,EAAO;AAEV,UAAIA,GAAG,CAACC,IAAJ,KAAa,WAAjB,EAA6B;AACxBN,QAAAA,QAAQ,CAAC;AACLO,UAAAA,IAAI,EAAC,eADA;AAELC,UAAAA,OAAO,EAAGH,GAAG,CAACC;AAFT,SAAD,CAAR;AAKH;AACJ,KAVD,EAWCG,KAXD,CAWO,UAACC,GAAD;AAAA,aAAOC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAP;AAAA,KAXP;AAYH,GAhBD;AAiBD,CAlBM;AAqBP,OAAO,IAAMG,SAAS,GAAG,SAAZA,SAAY,GAAI;AAC3B,SAAO;AACHN,IAAAA,IAAI,EAAE;AADH,GAAP;AAGD,CAJM","sourcesContent":["import Axios from 'axios'\nimport {serverUrl} from './../components/url'\nimport { getTokenClient } from '../components/index/token'\n\nexport const keepLogin = ()=>{\n  return (dispatch)=>{\n        var config = {\n          headers: {'Authorization': \"Bearer \" + getTokenClient()}\n        };\n      Axios.get(serverUrl+\"lender/profile\",config)\n      .then((res)=>{\n        \n         if (res.data !== \"undefined\"){\n              dispatch({\n                  type:'LOGIN_SUCCESS',\n                  payload : res.data\n              },\n              )\n          }\n      })\n      .catch((err)=>console.log(err))\n  }\n}\n\n\nexport const resetUser = ()=>{\n  return {\n      type: 'RESET_USER'\n  }\n}"]},"metadata":{},"sourceType":"module"}